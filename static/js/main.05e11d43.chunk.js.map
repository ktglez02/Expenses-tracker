{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/chart/ChartBar.js","components/chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeigt","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DummyExpenses","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.05e11d43.chunk.js","sourcesContent":["import './Card.css'; \nfunction Card(props) {\n    const classes = 'card ' + props.className; \nreturn (\n  <div className = {classes} >{props.children}</div>);\n}\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css'; \nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return(\n  <div className = 'expense-date'>\n    <div className = 'expense-date__month'>{month}</div>\n    <div className= 'expense-date__day' >{day}</div>\n    <div className = 'expense-date__year' >{year}</div>\n  </div>);\n}\nexport default ExpenseDate;\n","import ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport React from \"react\";\nimport Card from \"../UI/Card\";\nfunction ExpenseItem(props) {\n  \n  return (\n<li>\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}>\n       </ExpenseDate>\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from 'react'; \nimport ExpenseItem from './ExpenseItem'; \nimport './ExpenseList.css'; \n\n\nconst ExpenseList = (props) => {\n    if(props.items.length ===0){\n      return <h2 className ='expenses-list__fallback'>Found no expenses.</h2>;\n    }\n    return (\n    <ul className = \"expense-List\">\n       { props.items.map((expense) => (\n        <ExpenseItem\n        key = {expense.id}\n        title= {expense.title}\n        amount = {expense.amount}\n        date = {expense.date}\n        />\n        ))}\n    </ul>\n    );\n}; \n\nexport default ExpenseList; ","import React from 'react'; \nimport './ChartBar.css'; \n\nconst ChartBar = (props) => {\nlet barFillHeigt = '0%'; \nif (props.maxValue > 0){\n    barFillHeigt = Math.round((props.value / props.maxValue) * 100) + '%'; \n}\n\n    return (\n    <div className = \"chart-bar\">\n        <div  className = \"chart-bar__inner\"> \n        <div \n        className = \"chart-bar__fill\" \n        style ={{height: barFillHeigt}}\n        ></div>\n        </div>\n        <div className = \"chart-bar__label\">{props.label} </div>\n      </div>\n    );\n};\n\nexport default ChartBar; ","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;","import React from 'react';\n\nimport Chart from '../chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;","import React , {useState} from 'react'; \nimport \"./Expenses.css\";\nimport Card from '../UI/Card'; \nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseList from \"./ExpenseList.js\";\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n\nconst [filteredYear, setFilteredYear] = useState('2020'); \nconst filterChangeHandler = selectedYear => \n{\n  setFilteredYear(selectedYear); //use two way binding so that the last vaalue imputed no se quede de ultimo en el dornwdown menu\n};\nconst filteredExpenses = props.items.filter(expense =>\n  {\nreturn expense.date.getFullYear().toString() == filteredYear; \n  });\n\n\n  return (\n   <div>\n    <Card className='expenses'>\n    <ExpensesFilter \n    selected= {filteredYear} \n    onChangeFilter = {filterChangeHandler}\n    /> \n    <ExpensesChart expenses = {filteredExpenses}/>\n  <ExpenseList items = {filteredExpenses}/>\n    </Card>\n    </div>\n  );\n}\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit'>Add Expense</button>\n        <button type= 'button' onClick= {props.onCancel}> Cancel</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;"," import React, {useState} from 'react'; \n import ExpenseForm from './ExpenseForm'; \n import './NewExpenses.css'; \nconst NewExpense =(props) => {\nconst [isEditing, setIsEditing ] =useState(false);\n\nconst saveExpenseDataHandler = ( enteredExpenseData) => {\n    const expenseData = {\n        ...enteredExpenseData,\n        id: Math.random().toString()\n    }; \n    props.onAddExpense(expenseData);\n};\n\nconst startEditingHandler = ()=> {\n    setIsEditing(true); \n};\nconst stopEditingHandler = () => {\n    setIsEditing(false); \n};\n    return (\n    <div className = 'new-expense'>\n        {!isEditing && \n        <button onClick={startEditingHandler}> \n        Add New Expense</button>}\n       {isEditing && <ExpenseForm \n        onSaveExpenseData= {saveExpenseDataHandler}\n        onCancel ={stopEditingHandler}  \n        /> } \n    </div>\n    ); \n}; \n\nexport default NewExpense; ","import React, {useState} from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense'; \n\n  const DummyExpenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const App = () => {\n    const[expenses, setExpenses]= useState(DummyExpenses); \n const addExpenseHandler = (expense) => {\n  setExpenses((prevExpenses) => {\n    return [expense, ...prevExpenses]\n  }); \n }; \n return (\n   <div>\n     <NewExpense onAddExpense= {addExpenseHandler}/>\n     <Expenses items = {expenses} />\n    </div>\n );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}